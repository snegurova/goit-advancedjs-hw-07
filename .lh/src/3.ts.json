{
    "sourceFile": "src/3.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1732572621802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732572645383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,11 @@\n   Інтерфейс ICharacter повинен включати властивості name і level, і навіть метод introduce і levelUp. \n   Інтерфейс ISpellCaster повинен включати метод castSpell.\n */\n \n-interface ICharacter\n+interface ICharacter {\n+  name: string;\n+}\n \n // реалізація класу Wizard\n class Wizard implements ICharacter, ISpellCaster {\n   constructor(public name: string, public level: number) {\n"
                },
                {
                    "date": 1732572691556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,10 @@\n */\n \n interface ICharacter {\n   name: string;\n+  level: number;\n+  introduce\n }\n \n // реалізація класу Wizard\n class Wizard implements ICharacter, ISpellCaster {\n"
                },
                {
                    "date": 1732572768427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,16 @@\n \n interface ICharacter {\n   name: string;\n   level: number;\n-  introduce;\n+  introduce(phrase: string): void;\n+  levelUp(): void;\n }\n \n+interface ISpellCaster {\n+  castSpell(): void;\n+}\n+\n // реалізація класу Wizard\n class Wizard implements ICharacter, ISpellCaster {\n   constructor(public name: string, public level: number) {\n     if (this.level < 1) {\n"
                }
            ],
            "date": 1732572621802,
            "name": "Commit-0",
            "content": "/*\n  Ви створюєте гру, де є персонажі з різними ролями.\n  Зараз ви працюєте над класом Wizard, який має реалізовувати два інтерфейси - ICharacter та ISpellCaster.\n\n  Визначте інтерфейси ICharacter та ISpellCaster так, щоб вони відповідали вимогам класу Wizard. \n  Інтерфейс ICharacter повинен включати властивості name і level, і навіть метод introduce і levelUp. \n  Інтерфейс ISpellCaster повинен включати метод castSpell.\n*/\n\ninterface ICharacter\n\n// реалізація класу Wizard\nclass Wizard implements ICharacter, ISpellCaster {\n  constructor(public name: string, public level: number) {\n    if (this.level < 1) {\n      throw new Error('Level too low');\n    }\n  }\n\n  introduce(phrase: string): void {\n    console.log(phrase + ', ' + this.name);\n  }\n\n  castSpell(): void {\n    console.log('Casting a spell, behold my power!');\n  }\n\n  levelUp(): void {\n    this.level++;\n    console.log(`Level up! New level is ${this.level}`);\n  }\n}\n\n// тестування класу\nconst wizard = new Wizard('Merlin', 15);\n\nwizard.introduce('I am the mighty wizard');\nwizard.castSpell();\nwizard.levelUp();  // Level up! New level is 16\n\nexport {};"
        }
    ]
}